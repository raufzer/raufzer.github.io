---
import Pattern from "@/components/ui/pattern.astro";
import PageLayout from "@/layouts/page-layout.astro";
import Box from "@/components/box/index.astro";
import BoxHeader from "@/components/box/header.astro";
import BoxTitle from "@/components/box/title.astro";
import { getCollection } from "astro:content";
import ProjectItem from "@/components/sections/projects/project-item.astro";

const projects = await getCollection("projects");

const aiProjects = projects.filter(project => project.data.type === "ai");
const fullStackProjects = projects.filter(project => project.data.type === "fullstack");
const mobileProjects = projects.filter(project => project.data.type === "mobile");
const backendProjects = projects.filter(project => project.data.type === "backend");
const communityProjects = projects.filter(project => project.data.type === "community");
---

<PageLayout
  description="Showcasing my software development projects across mobile, backend, AI, tools, and community contributions."
  title="Abd Raouf Zerkhef - Projects"
>
  <Pattern />
    {aiProjects.length > 0 && (
    <>
      <Pattern />
      <Box>
        <BoxHeader>
          <BoxTitle>Artificial Intelligence & Data Science ({aiProjects.length})</BoxTitle>
        </BoxHeader>
        {aiProjects.map(item => <ProjectItem project={item} />)}
      </Box>
    </>
  )}
  {fullStackProjects.length > 0 && (
    <Box>
      <BoxHeader>
        <BoxTitle>Full-Stack Development ({fullStackProjects.length})</BoxTitle>
      </BoxHeader>
      {fullStackProjects.map(item => <ProjectItem project={item} />)}
    </Box>
  )}

    {mobileProjects.length > 0 && (
    <>
      <Pattern />
      <Box>
        <BoxHeader>
          <BoxTitle>Mobile Application Development ({mobileProjects.length})</BoxTitle>
        </BoxHeader>
        {mobileProjects.map(item => <ProjectItem project={item} />)}
      </Box>
    </>
  )}

  {backendProjects.length > 0 && (
    <>
      <Pattern />
      <Box>
        <BoxHeader>
          <BoxTitle>Backend Development & APIs({backendProjects.length})</BoxTitle>
        </BoxHeader>
        {backendProjects.map(item => <ProjectItem project={item} />)}
      </Box>
    </>
  )}

  {communityProjects.length > 0 && (
    <>
      <Pattern />
      <Box>
        <BoxHeader>
          <BoxTitle>Open Source & Developer Community ({communityProjects.length})</BoxTitle>
        </BoxHeader>
        {communityProjects.map(item => <ProjectItem project={item} />)}
      </Box>
    </>
  )}

 
  <Pattern />
</PageLayout>
